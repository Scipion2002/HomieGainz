// <auto-generated />
using System;
using HomieGainz.ApplicationDb.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomieGainz.ApplicationDb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.Property<int>("ExercisesId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutsId")
                        .HasColumnType("int");

                    b.HasKey("ExercisesId", "WorkoutsId");

                    b.HasIndex("WorkoutsId");

                    b.ToTable("ExerciseWorkout");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.MealDb.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Directions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a simple meal that will give you enough proteins to hit that gym hard!",
                            Directions = "First, get that salmon going, add a little of lemon pepper and that is all you need",
                            IngredientList = "Salmon, spices",
                            Name = "Salmon"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nice and easy salad that will make you want to have every day",
                            Directions = "First, cut those veggies and then finish it up with putting everything together",
                            IngredientList = "Lettuce, Tomato, Broccoli, Carrot",
                            Name = "Salad"
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.MealDb.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This Meal plan will have a lot of veggies and will have a tons of low calorie food",
                            Name = "Low Calories"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This mealplan is to bulk up and also be in shape",
                            Name = "High Calories"
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.UserDb.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<int?>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 19,
                            Email = "aturro@student.neumont.edu",
                            Height = 6.0999999999999996,
                            Password = "TestPass",
                            Username = "Scipion2002",
                            Weight = 164
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            Email = "aturro@student.neumont.edu",
                            Height = 6.0,
                            Password = "DavidPass",
                            Username = "DNgo-Neumont",
                            Weight = 156
                        },
                        new
                        {
                            Id = 3,
                            Age = 21,
                            Email = "rbrunney@student.neumont.edu",
                            Height = 6.0,
                            Password = "RobPass",
                            Username = "Rxittles",
                            Weight = 135
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.WorkoutDb.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RepAmt")
                        .HasColumnType("int");

                    b.Property<int>("SetAmt")
                        .HasColumnType("int");

                    b.Property<string>("TargetMuscle")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This exercise is one of the essentials, it will help you have a better control of your own weight and it will tune you up too!",
                            ExerciseName = "Push ups",
                            RepAmt = 10,
                            SetAmt = 3,
                            TargetMuscle = "biceps/triceps"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This exercise is one of the essentials, it will help you have a better control of your own weight and it will tune you up too!",
                            ExerciseName = "Push ups",
                            RepAmt = 10,
                            SetAmt = 3,
                            TargetMuscle = "biceps/triceps"
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.WorkoutDb.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Upper Body"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lower Body"
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.WorkoutDb.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WorkoutPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This plan is to help you bulk those muscles and make them bigger! The workouts will mostly be using heavy weights and doing exercises with them",
                            Name = "Bulk up"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This plan is filled with workouts that will make your muscles go in shock and it will also have mostly body-weight exercises",
                            Name = "Tune up"
                        });
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Models.Users.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<int?>("FromUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ToUserId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Models.Users.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<int?>("FromUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ToFriendId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToFriendId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("MealMealPlan", b =>
                {
                    b.Property<int>("MealPlansId")
                        .HasColumnType("int");

                    b.Property<int>("MealsId")
                        .HasColumnType("int");

                    b.HasKey("MealPlansId", "MealsId");

                    b.HasIndex("MealsId");

                    b.ToTable("MealMealPlan");
                });

            modelBuilder.Entity("WorkoutWorkoutPlan", b =>
                {
                    b.Property<int>("WorkoutPlansId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutsId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutPlansId", "WorkoutsId");

                    b.HasIndex("WorkoutsId");

                    b.ToTable("WorkoutWorkoutPlan");
                });

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.UserDb.User", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.MealDb.MealPlan", "MealPlan")
                        .WithMany("Users")
                        .HasForeignKey("MealPlanId");

                    b.HasOne("HomieGainz.ApplicationDb.Db.UserDb.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserId");

                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.WorkoutPlan", "WorkoutPlan")
                        .WithMany("Users")
                        .HasForeignKey("WorkoutPlanId");

                    b.Navigation("MealPlan");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Models.Users.Challenge", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.UserDb.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId");

                    b.HasOne("HomieGainz.ApplicationDb.Db.UserDb.User", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId");

                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Models.Users.Friendship", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.UserDb.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId");

                    b.HasOne("HomieGainz.ApplicationDb.Db.UserDb.User", "ToFriend")
                        .WithMany()
                        .HasForeignKey("ToFriendId");

                    b.Navigation("FromUser");

                    b.Navigation("ToFriend");
                });

            modelBuilder.Entity("MealMealPlan", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.MealDb.MealPlan", null)
                        .WithMany()
                        .HasForeignKey("MealPlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomieGainz.ApplicationDb.Db.MealDb.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutWorkoutPlan", b =>
                {
                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.WorkoutPlan", null)
                        .WithMany()
                        .HasForeignKey("WorkoutPlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomieGainz.ApplicationDb.Db.WorkoutDb.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.MealDb.MealPlan", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.UserDb.User", b =>
                {
                    b.Navigation("Friends");
                });

            modelBuilder.Entity("HomieGainz.ApplicationDb.Db.WorkoutDb.WorkoutPlan", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
